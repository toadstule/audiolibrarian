#!python

"""
PYTHONPATH=$(pwd) scripts/audiolibrarian /media/BlackBox/Music/flac/some_file

"""
import argparse
import re
import subprocess
import sys

from audiolibrarian.audiolibrarian import AudioLibrarian

REQUIRED_EXE = ("cd-paranoia", "fdkaac", "flac", "lame", "sndfile-convert", "wavegain")


def check_deps():
    missing = []
    for exe in REQUIRED_EXE:
        r = subprocess.run(("which", exe), stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        if r.returncode:
            missing.append(exe)
    if missing:
        print(f"\nMissing required executable(s): {', '.join(missing)}\n")
        sys.exit(1)


def parse_args():
    parser = argparse.ArgumentParser(description="Audio Librarian")
    subparsers = parser.add_subparsers(title="source", dest="source")

    parser.add_argument("--artist", "-a", help="provide artist (ignore tags)")
    parser.add_argument("--album", "-m", help="provide album (ignore tags)")
    parser.add_argument("--db", default="mb", choices=("discogs", "mb"), help="database")
    parser.add_argument("--disc", "-d", help="format: x/y: disc x of y for multi-disc release")
    parser.add_argument("--verbose", "-v", action="store_true", help="verbose output")

    from_files = subparsers.add_parser("files")
    from_files.add_argument("filenames", nargs="+", help="audio files")

    subparsers.add_parser("cd")

    return _validate_args(parser.parse_args())


def _validate_args(a):
    if a.disc:
        if not re.match(r"\d+/\d+", a.disc):
            print("Invalid --disc specification; should be x/y")
            sys.exit(-1)
    return a


if __name__ == "__main__":
    args = parse_args()
    if args.verbose:
        print(args)
    check_deps()
    AudioLibrarian(args)
